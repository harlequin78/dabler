--- MDSTk/src/lib/ImageIO/mdsPNGBaseFunctions.cpp
+++ MDSTk/src/lib/ImageIO/mdsPNGBaseFunctions.cpp
@@ -124,14 +124,14 @@ bool loadGrayPNG(CImage16& Image, mds::m
     png_infop pPNGInfo = png_create_info_struct(pPNGStruct);
     if( !pPNGInfo )
     {
-        png_destroy_read_struct(&pPNGStruct, png_infopp_NULL, png_infopp_NULL);
+        png_destroy_read_struct(&pPNGStruct, (png_infopp)NULL, (png_infopp)NULL);
         return false;
     }
 
     // setjmp() must be called in every function that calls a PNG-reading libpng function
     if( setjmp(png_jmpbuf(pPNGStruct)) )
     {
-        png_destroy_read_struct(&pPNGStruct, &pPNGInfo, png_infopp_NULL);
+        png_destroy_read_struct(&pPNGStruct, &pPNGInfo, (png_infopp)NULL);
         return false;
     }
 
@@ -154,7 +154,7 @@ bool loadGrayPNG(CImage16& Image, mds::m
     // Expand grayscale images to the full 8 bits
     if( iColorType == PNG_COLOR_TYPE_GRAY && iBitDepth < 8 )
     {
-        png_set_gray_1_2_4_to_8(pPNGStruct);
+        png_set_expand_gray_1_2_4_to_8(pPNGStruct);
     }
 
     // Transparent to alpha channel
@@ -176,7 +176,7 @@ bool loadGrayPNG(CImage16& Image, mds::m
     }*/
     if( iColorType == PNG_COLOR_TYPE_PALETTE )
     {
-        png_destroy_read_struct(&pPNGStruct, &pPNGInfo, png_infopp_NULL);
+        png_destroy_read_struct(&pPNGStruct, &pPNGInfo, (png_infopp)NULL);
         return false;
     }
 
@@ -259,7 +259,7 @@ bool loadGrayPNG(CImage16& Image, mds::m
 //  png_read_end(pPNGStruct, pPNGInfo);
 
     // Destroy the read structures
-    png_destroy_read_struct(&pPNGStruct, &pPNGInfo, png_infopp_NULL);
+    png_destroy_read_struct(&pPNGStruct, &pPNGInfo, (png_infopp)NULL);
 
     // Done
     return true;
@@ -298,14 +298,14 @@ bool loadColorPNG(CRGBImage& Image, mds:
     png_infop pPNGInfo = png_create_info_struct(pPNGStruct);
     if( !pPNGInfo )
     {
-        png_destroy_read_struct(&pPNGStruct, png_infopp_NULL, png_infopp_NULL);
+        png_destroy_read_struct(&pPNGStruct, (png_infopp)NULL, (png_infopp)NULL);
         return false;
     }
 
     // setjmp() must be called in every function that calls a PNG-reading libpng function
     if( setjmp(png_jmpbuf(pPNGStruct)) )
     {
-        png_destroy_read_struct(&pPNGStruct, &pPNGInfo, png_infopp_NULL);
+        png_destroy_read_struct(&pPNGStruct, &pPNGInfo, (png_infopp)NULL);
         return false;
     }
 
@@ -328,7 +328,7 @@ bool loadColorPNG(CRGBImage& Image, mds:
     // Expand grayscale images to the full 8 bits
     if( iColorType == PNG_COLOR_TYPE_GRAY && iBitDepth < 8 )
     {
-        png_set_gray_1_2_4_to_8(pPNGStruct);
+        png_set_expand_gray_1_2_4_to_8(pPNGStruct);
     }
 
     // Transparent to alpha channel
@@ -418,7 +418,7 @@ bool loadColorPNG(CRGBImage& Image, mds:
 //  png_read_end(pPNGStruct, pPNGInfo);
 
     // Destroy the read structures
-    png_destroy_read_struct(&pPNGStruct, &pPNGInfo, png_infopp_NULL);
+    png_destroy_read_struct(&pPNGStruct, &pPNGInfo, (png_infopp)NULL);
 
     // Done
     return (iBitDepth == 8);
@@ -450,7 +450,7 @@ bool saveGrayPNG(const CImage16& Image,
     png_infop pPNGInfo = png_create_info_struct(pPNGStruct);
     if( !pPNGInfo )
     {
-        png_destroy_write_struct(&pPNGStruct,  png_infopp_NULL);
+        png_destroy_write_struct(&pPNGStruct, (png_infopp)NULL);
         return false;
     }
 
@@ -581,7 +581,7 @@ bool saveColorPNG(const CRGBImage& Image
     png_infop pPNGInfo = png_create_info_struct(pPNGStruct);
     if( !pPNGInfo )
     {
-        png_destroy_write_struct(&pPNGStruct,  png_infopp_NULL);
+        png_destroy_write_struct(&pPNGStruct, (png_infopp)NULL);
         return false;
     }
 
